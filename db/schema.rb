# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[8.0].define(version: 2025_06_25_034812) do
  create_table "commands", force: :cascade do |t|
    t.integer "Device_id", null: false
    t.datetime "trigger_time"
    t.string "command"
    t.string "type"
    t.string "result"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["Device_id"], name: "index_commands_on_Device_id"
  end

  create_table "device_states", force: :cascade do |t|
    t.integer "Device_id", null: false
    t.string "version"
    t.boolean "armed"
    t.boolean "prearmed"
    t.string "mode"
    t.string "status"
    t.decimal "latitude1"
    t.decimal "longitude1"
    t.string "gps1_status"
    t.integer "gps1_timestamp"
    t.integer "satcount1"
    t.float "gps1_altitude"
    t.float "gps1_speed"
    t.float "gps1_heading"
    t.float "gps1_hdop"
    t.string "gps1_fix_type"
    t.decimal "latitude2"
    t.decimal "longitude2"
    t.string "gps2_status"
    t.integer "gps2_timestamp"
    t.integer "satcount2"
    t.float "gps2_altitude"
    t.float "gps2_speed"
    t.float "gps2_heading"
    t.float "gps2_hdop"
    t.string "gps2_fix_type"
    t.float "vibex"
    t.float "vibey"
    t.float "vibez"
    t.float "heading_deg"
    t.float "roll_deg"
    t.float "yaw_deg"
    t.boolean "landed"
    t.integer "landed_state"
    t.float "timeInAir"
    t.boolean "extended1"
    t.boolean "extend1"
    t.boolean "extended2"
    t.boolean "extend2"
    t.boolean "maglock"
    t.boolean "laser"
    t.boolean "headlight"
    t.boolean "spotlight"
    t.float "ax1"
    t.float "ay1"
    t.float "az1"
    t.float "ax2"
    t.float "ay2"
    t.float "az2"
    t.float "ax3"
    t.float "ay3"
    t.float "az3"
    t.float "vx"
    t.float "vy"
    t.float "vz"
    t.float "imu1_temp_c"
    t.float "imu2_temp_c"
    t.float "imu3_temp_c"
    t.float "gimbal_heading_deg"
    t.float "gimbal_tilt_deg"
    t.float "gimbal_yaw_deg"
    t.float "gimbal_target_heading_deg"
    t.float "gimbal_target_tilt_deg"
    t.float "gimbal_target_yaw_deg"
    t.float "nav_bearing"
    t.float "nav_pitch"
    t.float "nav_roll"
    t.float "magnetic_x"
    t.float "magnetic_y"
    t.float "magnetic_z"
    t.float "sonar_range_m"
    t.float "sonar_v"
    t.boolean "terrainactive"
    t.boolean "safetyactive"
    t.boolean "failsafe"
    t.float "temp1_c"
    t.float "temp2_c"
    t.float "temp3_c"
    t.float "temp4_c"
    t.float "temp5_c"
    t.float "temp6_c"
    t.float "temp7_c"
    t.float "temp8_c"
    t.float "pressure_pa"
    t.float "airspeed"
    t.float "battery1_v"
    t.float "battery1_a"
    t.float "battery1_temp_c"
    t.float "battery1_percent"
    t.float "battery2_v"
    t.float "battery2_a"
    t.float "battery2_temp_c"
    t.float "battery2_percent"
    t.float "battery3_v"
    t.float "battery3_a"
    t.float "battery3_temp_c"
    t.float "battery3_percent"
    t.float "battery4_v"
    t.float "battery4_a"
    t.float "battery4_temp_c"
    t.float "battery4_percent"
    t.float "battery5_v"
    t.float "battery5_a"
    t.float "battery5_temp_c"
    t.float "battery5_percent"
    t.float "battery6_v"
    t.float "battery6_a"
    t.float "battery6_temp_c"
    t.float "battery6_percent"
    t.float "battery7_v"
    t.float "battery7_a"
    t.float "battery7_temp_c"
    t.float "battery7_percent"
    t.float "battery8_v"
    t.float "battery8_a"
    t.float "battery8_temp_c"
    t.float "battery8_percent"
    t.float "esc1_v"
    t.float "esc1_a"
    t.float "esc1_temp_c"
    t.float "esc1_rpm"
    t.float "esc2_v"
    t.float "esc2_a"
    t.float "esc2_temp_c"
    t.float "esc2_rpm"
    t.float "esc3_v"
    t.float "esc3_a"
    t.float "esc3_temp_c"
    t.float "esc3_rpm"
    t.float "esc4_v"
    t.float "esc4_a"
    t.float "esc4_temp_c"
    t.float "esc4_rpm"
    t.float "esc5_v"
    t.float "esc5_a"
    t.float "esc5_temp_c"
    t.float "esc5_rpm"
    t.float "esc6_v"
    t.float "esc6_a"
    t.float "esc6_temp_c"
    t.float "esc6_rpm"
    t.float "esc7_v"
    t.float "esc7_a"
    t.float "esc7_temp_c"
    t.float "esc7_rpm"
    t.float "esc8_v"
    t.float "esc8_a"
    t.float "esc8_temp_c"
    t.float "esc8_rpm"
    t.float "esc9_v"
    t.float "esc9_a"
    t.float "esc9_temp_c"
    t.float "esc9_rpm"
    t.float "esc10_v"
    t.float "esc10_a"
    t.float "esc10_temp_c"
    t.float "esc10_rpm"
    t.float "esc11_v"
    t.float "esc11_a"
    t.float "esc11_temp_c"
    t.float "esc11_rpm"
    t.float "esc12_v"
    t.float "esc12_a"
    t.float "esc12_temp_c"
    t.float "esc12_rpm"
    t.float "esc13_v"
    t.float "esc13_a"
    t.float "esc13_temp_c"
    t.float "esc13_rpm"
    t.float "esc14_v"
    t.float "esc14_a"
    t.float "esc14_temp_c"
    t.float "esc14_rpm"
    t.float "esc15_v"
    t.float "esc15_a"
    t.float "esc15_temp_c"
    t.float "esc15_rpm"
    t.float "esc16_v"
    t.float "esc16_a"
    t.float "esc16_temp_c"
    t.float "esc16_rpm"
    t.float "efi_rpm"
    t.float "efi_fuel_pressure_bar"
    t.float "efi_intake_temp_c"
    t.float "efi_exhaust_temp_c"
    t.float "efi_fuel_flow_lps"
    t.float "efi_fuel_percent"
    t.float "efi_baro"
    t.float "efi_load"
    t.float "throttle_angle"
    t.float "brake_angle"
    t.float "steering_wheel_angle"
    t.integer "turn_signal"
    t.boolean "xpdr_adsb_tx_sys_fail"
    t.boolean "xpdr_airborne_status"
    t.float "xpdr_board_temperature_c"
    t.boolean "xpdr_es1090_tx_enable"
    t.string "xpdr_flight_id"
    t.boolean "xpdr_gps_no_fix"
    t.boolean "xpdr_gps_unavail"
    t.boolean "xpdr_ident_active"
    t.boolean "xpdr_interrogated_since"
    t.boolean "xpdr_maint_req"
    t.boolean "xpdr_mode_A_enable"
    t.integer "xpdr_mode_A_squawk"
    t.boolean "xpdr_mode_C_enable"
    t.boolean "xpdr_mode_S_enable"
    t.integer "xpdr_nacp"
    t.integer "xpdr_nic"
    t.boolean "xpdr_status_pending"
    t.boolean "xpdr_status_unavail"
    t.boolean "xpdr_x_bit_status"
    t.integer "cell_rssi_dbm"
    t.integer "cell_rsrp"
    t.integer "cell_rsrq"
    t.integer "cell_sinr"
    t.string "cell_network_type"
    t.string "cell_id"
    t.string "cell_connection_state"
    t.string "cell_network_registration_state"
    t.integer "cell_retry_count"
    t.integer "cell_latency_ms"
    t.string "cell_ip"
    t.integer "cell_network_bytes_sent"
    t.integer "cell_network_bytes_recevied"
    t.integer "cell_network_bps_up"
    t.integer "cell_network_bps_down"
    t.string "wifi_ssid"
    t.string "wifi_bssid"
    t.integer "wifi_rssi_dbm"
    t.integer "wifi_snr_db"
    t.integer "wifi_link_speed_mbps"
    t.string "wifi_band"
    t.integer "wifi_channel"
    t.string "wifi_ip_address"
    t.string "wifi_connection_status"
    t.integer "wifi_uptime_sec"
    t.integer "wifi_bytes_sent"
    t.integer "wifi_bytes_received"
    t.string "mac_address"
    t.string "ethernet_link_status"
    t.string "ethernet_speed"
    t.string "ip_address"
    t.string "subnet_mask"
    t.string "default_gateway"
    t.string "dhcp_status"
    t.string "dhcp_lease"
    t.float "ham_radio_rx_hz"
    t.float "ham_radio_tx_hz"
    t.float "ham_radio_watts"
    t.boolean "ham_radio_enable"
    t.float "ham_radio_v"
    t.float "ham_radio_a"
    t.float "heater1_v"
    t.float "heater1_a"
    t.float "heater1_temp_c"
    t.float "heater2_v"
    t.float "heater2_a"
    t.float "heater2_temp_c"
    t.float "heater3_v"
    t.float "heater3_a"
    t.float "heater3_temp_c"
    t.float "heater4_v"
    t.float "heater4_a"
    t.float "heater4_temp_c"
    t.float "humidity1"
    t.float "humidity2"
    t.float "fan1_v"
    t.float "fan1_a"
    t.float "fan1_rpm"
    t.float "fan2_v"
    t.float "fan2_a"
    t.float "fan2_rpm"
    t.float "rangefinder1_m"
    t.float "rangefinder2_m"
    t.float "rangefinder3_m"
    t.float "rangefinder4_m"
    t.float "rangefinder5_m"
    t.float "rangefinder6_m"
    t.float "rangefinder7_m"
    t.float "rangefinder8_m"
    t.float "solar1_v"
    t.float "solar1_a"
    t.float "solar2_v"
    t.float "solar2_a"
    t.float "charge_v"
    t.float "charge_a"
    t.integer "mag1"
    t.integer "mag2"
    t.integer "mag3"
    t.integer "mag4"
    t.boolean "button1"
    t.boolean "button2"
    t.boolean "switch1"
    t.boolean "switch2"
    t.float "load_cell1_n"
    t.float "load_cell2_n"
    t.float "load_cell3_n"
    t.float "load_cell4_n"
    t.float "current_sensor1_ma"
    t.float "current_sensor2_ma"
    t.float "current_sensor3_ma"
    t.float "current_sensor4_ma"
    t.float "current_sensor5_ma"
    t.float "current_sensor6_ma"
    t.float "current_sensor7_ma"
    t.float "current_sensor8_ma"
    t.float "voltage_sensor1_mv"
    t.float "voltage_sensor2_mv"
    t.float "voltage_sensor3_mv"
    t.float "voltage_sensor4_mv"
    t.float "voltage_sensor5_mv"
    t.float "voltage_sensor6_mv"
    t.float "voltage_sensor7_mv"
    t.float "voltage_sensor9_mv"
    t.boolean "digital_output1"
    t.boolean "digital_output2"
    t.boolean "digital_output3"
    t.boolean "digital_output4"
    t.boolean "digital_output5"
    t.boolean "digital_output6"
    t.boolean "digital_output7"
    t.boolean "digital_output8"
    t.boolean "digital_input1"
    t.boolean "digital_input2"
    t.boolean "digital_input3"
    t.boolean "digital_input4"
    t.boolean "digital_input5"
    t.boolean "digital_input6"
    t.boolean "digital_input7"
    t.boolean "digital_input8"
    t.float "analog_output1"
    t.float "analog_output2"
    t.float "analog_output3"
    t.float "analog_output4"
    t.float "analog_output5"
    t.float "analog_output6"
    t.float "analog_output7"
    t.float "analog_output8"
    t.float "hall1_angle_degrees"
    t.float "hall2_angle_degrees"
    t.float "hall3_angle_degrees"
    t.float "hall4_angle_degrees"
    t.float "hall5_angle_degrees"
    t.float "hall6_angle_degrees"
    t.float "hall7_angle_degrees"
    t.float "hall8_angle_degrees"
    t.boolean "hall1_presence"
    t.boolean "hall2_presence"
    t.boolean "hall3_presence"
    t.boolean "hall4_presence"
    t.boolean "hall5_presence"
    t.boolean "hall6_presence"
    t.boolean "hall7_presence"
    t.boolean "hall8_presence"
    t.float "geiger_mrad"
    t.float "color_r"
    t.float "color_g"
    t.float "color_b"
    t.string "text1"
    t.string "text2"
    t.string "text3"
    t.string "text4"
    t.string "text5"
    t.string "text6"
    t.string "text7"
    t.string "text8"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["Device_id"], name: "index_device_states_on_Device_id"
  end

  create_table "devices", force: :cascade do |t|
    t.string "name"
    t.integer "state_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["state_id"], name: "index_devices_on_state_id"
  end

  add_foreign_key "commands", "Devices"
  add_foreign_key "device_states", "Devices"
  add_foreign_key "devices", "states"
end
